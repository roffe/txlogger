package kwp2000

const (
	START_COM_REQ                         = 0x81
	STOP_COM_REQ                          = 0x82
	START_DIAGNOSTIC_SESSION              = 0x10
	STOP_DIAGNOSTIC_SESSION               = 0x20
	ECU_RESET                             = 0x11
	READ_FREEZEFRAME_DATA                 = 0x12
	CLEAR_DTC                             = 0x14
	READ_STATUS_DTC                       = 0x17
	READ_DTC_BY_STATUS                    = 0x18
	READ_VEHICLE_IDENTIFICATION           = 0x1A
	READ_DATA_BY_IDENTIFIER               = 0x21
	READ_DATA_BY_IDENTIFIER_BIG           = 0x22
	READ_MEMORY_BY_ADDRESS                = 0x23
	SECURITY_ACCESS                       = 0x27
	DYNAMICALLY_DEFINE_IDENTIFIER         = 0x2C
	INPUT_OUTPUT_BY_IDENTIFIER            = 0x30
	START_ROUTINE_BY_IDENTIFIER           = 0x31
	STOP_ROUTINE_BY_IDENTIFIER            = 0x32
	REQUEST_ROUTINE_RESULTS_BY_IDENTIFIER = 0x33
	REQUEST_DOWNLOAD                      = 0x34
	REQUEST_UPLOAD                        = 0x35
	TRANSFER_DATA                         = 0x36
	REQUEST_TRANSFER_EXIT                 = 0x37
	START_ROUTINE_BY_ADDRESS              = 0x38
	STOP_ROUTINE_BY_ADDRESS               = 0x39
	WRITE_DATA_BY_IDENTIFIER              = 0x3B
	WRITE_DATA_BY_ADDRESS                 = 0x3D
	TESTER_PRESENT                        = 0x3E

	// Myrtilos specific
	EU0D_SET_REGISTRATION_KEY = 0x24
)

func TranslateServiceID(command byte) string {
	switch command {
	case START_COM_REQ:
		return "START_COM_REQ"
	case STOP_COM_REQ:
		return "STOP_COM_REQ"
	case START_DIAGNOSTIC_SESSION:
		return "START_DIAGNOSTIC_SESSION"
	case STOP_DIAGNOSTIC_SESSION:
		return "STOP_DIAGNOSTIC_SESSION"
	case ECU_RESET:
		return "ECU_RESET"
	case READ_FREEZEFRAME_DATA:
		return "READ_FREEZEFRAME_DATA"
	case CLEAR_DTC:
		return "CLEAR_DTC"
	case READ_STATUS_DTC:
		return "READ_STATUS_DTC"
	case READ_DTC_BY_STATUS:
		return "READ_DTC_BY_STATUS"
	case READ_VEHICLE_IDENTIFICATION:
		return "READ_VEHICLE_IDENTIFICATION"
	case READ_DATA_BY_IDENTIFIER:
		return "READ_DATA_BY_IDENTIFIER"
	case READ_DATA_BY_IDENTIFIER_BIG:
		return "READ_DATA_BY_IDENTIFIER_BIG"
	case READ_MEMORY_BY_ADDRESS:
		return "READ_MEMORY_BY_ADDRESS"
	case SECURITY_ACCESS:
		return "SECURITY_ACCESS"
	case DYNAMICALLY_DEFINE_IDENTIFIER:
		return "DYNAMICALLY_DEFINE_IDENTIFIER"
	case INPUT_OUTPUT_BY_IDENTIFIER:
		return "INPUT_OUTPUT_BY_IDENTIFIER"
	case START_ROUTINE_BY_IDENTIFIER:
		return "START_ROUTINE_BY_IDENTIFIER"
	case STOP_ROUTINE_BY_IDENTIFIER:
		return "STOP_ROUTINE_BY_IDENTIFIER"
	case REQUEST_ROUTINE_RESULTS_BY_IDENTIFIER:
		return "REQUEST_ROUTINE_RESULTS_BY_IDENTIFIER"
	case REQUEST_DOWNLOAD:
		return "REQUEST_DOWNLOAD"
	case REQUEST_UPLOAD:
		return "REQUEST_UPLOAD"
	case TRANSFER_DATA:
		return "TRANSFER_DATA"
	case REQUEST_TRANSFER_EXIT:
		return "REQUEST_TRANSFER_EXIT"
	case START_ROUTINE_BY_ADDRESS:
		return "START_ROUTINE_BY_ADDRESS"
	case STOP_ROUTINE_BY_ADDRESS:
		return "STOP_ROUTINE_BY_ADDRESS"
	case WRITE_DATA_BY_IDENTIFIER:
		return "WRITE_DATA_BY_IDENTIFIER"
	case WRITE_DATA_BY_ADDRESS:
		return "WRITE_DATA_BY_ADDRESS"
	case TESTER_PRESENT:
		return "TESTER_PRESENT"
	case EU0D_SET_REGISTRATION_KEY:
		return "EU0D_SET_REGISTRATION_KEY"
	default:
		return "Unknown Command"
	}
}
